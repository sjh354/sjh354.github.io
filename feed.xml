<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="kr"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://sjh354.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://sjh354.github.io/" rel="alternate" type="text/html" hreflang="kr"/><updated>2025-11-01T16:50:17+00:00</updated><id>https://sjh354.github.io/feed.xml</id><title type="html">blank</title><subtitle>나의 개쩌는 사람되기 홈페이지 </subtitle><entry><title type="html">블로그 도메인을 바꿔보자!</title><link href="https://sjh354.github.io/blog/2024/blogdomain/" rel="alternate" type="text/html" title="블로그 도메인을 바꿔보자!"/><published>2024-02-09T14:59:59+00:00</published><updated>2024-02-09T14:59:59+00:00</updated><id>https://sjh354.github.io/blog/2024/blogdomain</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/blogdomain/"><![CDATA[<h2 id="1-서론">1. 서론</h2> <p>지금 블로그를 sjh354.github.io에서 깃허브 페이지로 호스팅 하고 있었다. 근데 약간 기분 나빠서 그냥 하고 싶어서 미리 사놨던 caffeineoverdose.life 도메인에서 서브도메인 하나 파서 호스팅 하려고 한다. <br/></p> <h2 id="2-본론">2. 본론</h2> <p>지금 호스팅케이알에서 caffeineoverdose.life 도메인을 사놨다. 지금 깃헙 페이지에서 호스팅하고 있는 지킬 블로그를 blog.caffeineoverdose.life에서 호스팅 해보자.</p> <ol> <li>호스팅케이알에서 DNS레코드 관리 - 새 레코드 추가 에서 A레코드 4개랑 CNAME레코드 1개를 추가한다. A 레코드에는 이름은 서브도메인 이름으로(나는 <em>blog</em>)으로 했고 값 란에는 아래의 4 개의 IPv4를 추가한다 <blockquote> <p>185.199.108.153 / 185.199.109.153 / 185.199.110.153 / 185.199.111.153</p> </blockquote> </li> </ol> <p>CNAME 레코드에는 www.blog를 이름으로 넣고 값 란에는 <username>.github.io(나의 경우 sjh354.github.io)로 추가해 주었다.</username></p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2402/2-480.webp 480w,/assets/img/blog/2402/2-800.webp 800w,/assets/img/blog/2402/2-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/2402/2.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2402/3-480.webp 480w,/assets/img/blog/2402/3-800.webp 800w,/assets/img/blog/2402/3-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/2402/3.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <ol> <li> <p>github에서 호스팅 중인 레포지토리로 들어와서 Settings - Pages 에서 Custom Domain란의 주소에 내 블로그의 새 주소를 넣어주었다.(나의 경우 blog.caffeineoverdose.life)</p> </li> <li> <p>그럼 끗~~~~~~~!! 결과는 요로케 뜬다</p> </li> </ol> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2402/4-480.webp 480w,/assets/img/blog/2402/4-800.webp 800w,/assets/img/blog/2402/4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/2402/4.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="3-결론">3. 결론</h2> <p>블로그는 사 드세요..제발 <br/> 농담이고 아주 맘에 든다.<br/> (대충 네이버 블로그 킹받는 이모티콘)</p>]]></content><author><name></name></author><category term="Development"/><category term="정보"/><category term="삽질"/><category term="문제해결"/><summary type="html"><![CDATA[블로그 도메인을 바꿔보자!]]></summary></entry><entry><title type="html">AI 개념정리</title><link href="https://sjh354.github.io/blog/2024/init2/" rel="alternate" type="text/html" title="AI 개념정리"/><published>2024-02-04T06:31:51+00:00</published><updated>2024-02-04T06:31:51+00:00</updated><id>https://sjh354.github.io/blog/2024/init2</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/init2/"><![CDATA[<h2 id="1-서론">1. 서론</h2> <p>예전부터 최신 인사이트를 좀 따라가고 싶었는데 어디서부터 손을 대야할 지 막막했는데 23년 가을학기 홍승훈교수님의 딥러닝개론(CS492) 수업을 듣고 뭔가 틀이 잡힌 것 같아 지금이라면 할 수만 있을 것 같은 생각이 들었다. <br/> 또 캐글이나 이런 대회들을 보면 아직 클래식컬한 방법들이 잘 먹히는 문제들이 많은 것 같은데, 이쪽은 23년 봄학기 박찬영 교수님의 통계적 기계학습(IE343)을 토대로 정리해 볼 예정이다. <br/></p> <h2 id="2-본론">2. 본론</h2> <p>일단 배운 것 들을 대분류를 해보자면, <br/> 이건 IE343 내용이고,</p> <ul> <li>Linear Regression</li> <li>K-Nearest Neighbors (KNN)</li> <li>Logistic Regression</li> <li>LDA / QDA</li> <li>Resampling Methods(Validation set approach, Cross-validation, Bootstrap)</li> <li>Linear Model Selection and Regularization(Subset Selection, Shrinkage Methods, Dimension reduction,Considerations in High Dimensions)</li> <li>Polynomial regression, Step functions, Regression splines, Smoothing splines, Local regression, Generalized additive models</li> <li>Tree-based Methods(Decision Trees, Bagging, , Random Forest, Boosting)</li> <li>Support Vector Machines (SVM)</li> <li>PCA, Clustering Methods</li> <li>Deep Learning(DNN, CNN, RNN, Self-supervised Learning, GNN) <br/><br/></li> </ul> <p>이건 CS492 내용이다</p> <ul> <li>Convolutional Neural Networks (CNN) <ul> <li>Image classification</li> <li>Object detection</li> <li>Semantic segmentation</li> <li>Visualization</li> <li>Style transfer</li> <li>Adversarial attacks</li> </ul> </li> <li>Recurrent Neural Networks (RNN) <ul> <li>Text modeling</li> <li>Machine translation</li> <li>Image captioning</li> <li>Visual question answering</li> </ul> </li> <li>Deep generative models <ul> <li>Image generation</li> <li>Text generation</li> <li>Img-to-img translation</li> </ul> </li> <li>Advanced topics <ul> <li>Attention and versatile networks</li> <li>Self- and Semi-supervised learning</li> <li>Multi-modal learning</li> <li>Graph neural networks</li> </ul> </li> </ul> <p>중간중간 뼈대는 최대한 유지한 채로 논문이나 코드가 완성되면 갖다 붙이면서 완성해볼 작정이다.</p> <h2 id="3-결론">3. 결론</h2> <p>할게 너무 많아 보이지만 일단 해보자고</p>]]></content><author><name></name></author><category term="Development"/><category term="정보"/><summary type="html"><![CDATA[내가 아는 정보를 정리하자]]></summary></entry><entry><title type="html">PS를 하자</title><link href="https://sjh354.github.io/blog/2024/psinit/" rel="alternate" type="text/html" title="PS를 하자"/><published>2024-02-03T16:58:04+00:00</published><updated>2024-02-03T16:58:04+00:00</updated><id>https://sjh354.github.io/blog/2024/psinit</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/psinit/"><![CDATA[<h2 id="1-서론">1. 서론</h2> <p>이 카테고리에는 PS 문제를 풀고 풀이를 쓸 예정이다. <br/></p> <h2 id="2-본론">2. 본론</h2> <p>대충 백준기준 골드에서 플래티넘 사이에서 풀 것 같다. <br/> c++ 17을 사용할 듯 하다. <br/> <a href="https://www.acmicpc.net/user/thdwogns0504">여기</a>에서 내 계정을 확인할 수 있다.</p> <h2 id="3-결론">3. 결론</h2> <p>사실 이 것도 몇 일 이나 갈 지는 모르겠다</p>]]></content><author><name></name></author><category term="Development"/><category term="PS"/><summary type="html"><![CDATA[PS를 하자]]></summary></entry><entry><title type="html">논문 리뷰</title><link href="https://sjh354.github.io/blog/2024/iint5/" rel="alternate" type="text/html" title="논문 리뷰"/><published>2024-02-03T16:47:46+00:00</published><updated>2024-02-03T16:47:46+00:00</updated><id>https://sjh354.github.io/blog/2024/iint5</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/iint5/"><![CDATA[<p>인공지능 관련 논문 리뷰를 좀 해보려고 한다. <br/> 예전부터 최신 인사이트를 좀 따라가고 싶었는데 어디서부터 손을 대야할 지 막막했는데 23년 가을학기 홍승훈교수님의 딥러닝개론(CS492) 수업을 듣고 뭔가 틀이 잡힌 것 같아 지금이라면 할 수만 있을 것 같은 생각이 들었다. <br/></p> <p>아래 CS492에서 힌트를 얻은 맵을 채워나갈 예정이다</p> <ul> <li>Convolutional Neural Networks (CNN) <ul> <li>Image classification</li> <li>Object detection</li> <li>Semantic segmentation</li> <li>Visualization</li> <li>Style transfer</li> <li>Adversarial attacks</li> </ul> </li> <li>Recurrent Neural Networks (RNN) <ul> <li>Text modeling</li> <li>Machine translation</li> <li>Image captioning</li> <li>Visual question answering</li> </ul> </li> <li>Deep generative models <ul> <li>Image generation</li> <li>Text generation</li> <li>Img-to-img translation</li> </ul> </li> <li>Advanced topics <ul> <li>Attention and versatile networks</li> <li>Self- and Semi-supervised learning</li> <li>Multi-modal learning</li> <li>Graph neural networks</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="Review"/><category term="AI"/><summary type="html"><![CDATA[논문 리뷰를 해보자]]></summary></entry><entry><title type="html">개인 홈페이지를 만들어 보자(이전 블로그 백업)</title><link href="https://sjh354.github.io/blog/2024/homepage/" rel="alternate" type="text/html" title="개인 홈페이지를 만들어 보자(이전 블로그 백업)"/><published>2024-02-03T16:31:34+00:00</published><updated>2024-02-03T16:31:34+00:00</updated><id>https://sjh354.github.io/blog/2024/homepage</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/homepage/"><![CDATA[<h2 id="1-서론">1. 서론</h2> <p>그냥 홈페이지가 갖고 싶었다. <br/> 마침 노트북 한 대가 남아서 여기 우분투 서버를 깔아서 돌려보도록 하자.</p> <h2 id="2-본론">2. 본론</h2> <p>일단 caffeineoverdose.life라는 도메인을 <a href="https://www.hosting.kr/">호스팅케이알</a>에서 구입했다. <br/> 뭔가 컨셉을 운동하는 전산과 학생 뭐 이런걸로 잡고 싶은데 운동이랑 전산학이랑 공통점이 카페인을 때려넣어야 내가 작동한다는 것 같아서 골라봤다. <br/> 그냥 .com이나 깔쌈한걸 쓰고 싶었지만 .life가 특가처럼 엄청 싸게 풀려있길래 1년만 구매하고 연장 안해야겠다는 생각으로 일단 구매했다. <br/> 근데 생각보다 <em>.life</em> 이거도 멋진거 같고 좋은거같기도 하다. <br/></p> <p>여기 홈페이지를 띄울텐데 추후 이런저런 인공지능 모델 같은거도 서비스하고 싶은 야망이 있는 관계로 Django 베이스로 띄우기로 결정했다. <br/> 내가 원하는 기능은 아래와 같다.</p> <ol> <li>디자인에는 영 아닌 관계로 최대한 컴팩트하게</li> <li>포트폴리오를 띄울 수 있도록 갤러리 형식으로 볼 수 있는 화면이 있으면 좋겠다</li> <li>나에게 하고 싶은 말을 하거나 서로 소통할 수 있는 창도 있으면 좋겠다</li> <li>나중에 무슨 기능이 추가될지 모르니 로그인/회원가입 등 유저 관리 기능이 있으면 좋겠다</li> <li>지금은 github.io로 호스팅하지만 aws에 올리고 ssl 인증서 발급이 가능해지면 이 블로그도 해당 서버에서 서비스할 예정이다. <ul> <li>지금 이 블로그는 Jekyll로 돌리고 있는데 _site 파일만 갖고온다고 django에서 서비스가 될지는 잘 모르겠다…</li> <li><a href="https://www.ajnisbet.com/blog/jekyll-in-django">이 글</a>을 보고 용기를 얻었는데 잘 모르겠다..</li> </ul> </li> <li>화면이 너무 비어보일까봐 걱정이라 <a href="https://www.buymeacoffee.com/sjh354">BuyMeACoffee</a> 링크도 넣기로 했다 <br/><br/></li> </ol> <p>여기에 추가로 생각해 본 점들은 아래와 같다</p> <ul> <li>여기에 노트북이 오래되기도 했고, 관리 등 여러 문제를 생각했을 때 AWS EC2에 올릴 예정인데, 이때를 대비해 docker 이미지로 갖고 있을 필요가 있겠다.</li> <li>code-server.caffeineoverdose.life에서는 온라인 IDE를 구성해서 쓸 예정이다.</li> <li>drive.caffeineoverdose.life에서 드라이브 같이 파일 공유할 수 있는 서비스도 개발알 예정이다.</li> </ul> <p>생각 나는건 많은데 일단 홈페이지 메뉴에는 Blog, Questions, Portfolio, BuyCoffee, Login/Logout 메뉴만 띄우고 새로 서비스 생기는건 Portfolio에서 a 링크로 걸어주는게 깔끔할 것 같다. <br/><br/></p> <p>일단 대충 그림으로 정리해보면 다음과 같다. (여기 내가 쓴 <a href="https://github.com/cotes2020/jekyll-theme-chirpy">Chirpy</a>라는 템플릿에서 <a href="https://github.com/mermaid-js/mermaid">mermaid</a>라는걸 쓸 수 있길래 써봤다)</p> <pre><code class="language-mermaid">flowchart LR
    A(User) --&gt; |request| B(Proxy)
    B --&gt;|default| C(Homepage)
    B --&gt;|code-server._._| D(code-server)
    B --&gt;|drive._._| E(drive)
    C --&gt; F(blog)
    C --&gt; G(Questions)
    C --&gt; H(Portfolios)
    C --&gt; I(Auth)
    I --&gt; D
    I --&gt; E
</code></pre> <p>뭔가 난잡한데 그렇게 되어버렸다.ㅋㅋ <br/> 일단 django에서 제공하는 Auth를 사용해서 question같은건 먼저 구현해보고 나중에 따로 이걸 위한 DB를 구축해야겠다. <br/> <br/></p> <p>그리고 메인 페이지에 들어갈 기깔나는 표지를 그리고 싶었는데 쉽지 않았다.<br/> 인공지능한테 대충 헬스하는 개발자 느낌으로 그려달라 했는데 아래를 얻었다.<br/></p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/blog/2402/1-480.webp 480w,/assets/img/blog/2402/1-800.webp 800w,/assets/img/blog/2402/1-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/blog/2402/1.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <p>그럭저럭 나쁘지 않은 것 같기도 하고..?<br/> 그래서 이 블로그도 싹다 저 사진으로 도배했다.<br/> 살다보면 쓸만한 이미지가 생기지 않을까 생각하기로 했다.</p> <h2 id="3-결론">3. 결론</h2> <p>대충 아웃라인은 잡힌 것 같다 <br/> 이제 고생을 좀 해봐야겠다 으악</p>]]></content><author><name></name></author><category term="Development"/><category term="정보"/><category term="삽질"/><category term="docker"/><category term="docker-compose"/><category term="devops"/><summary type="html"><![CDATA[예전 블로그 자료 백업]]></summary></entry><entry><title type="html">My Blog Init(이전 블로그 백업)</title><link href="https://sjh354.github.io/blog/2024/images/" rel="alternate" type="text/html" title="My Blog Init(이전 블로그 백업)"/><published>2024-02-03T11:00:00+00:00</published><updated>2024-02-03T11:00:00+00:00</updated><id>https://sjh354.github.io/blog/2024/images</id><content type="html" xml:base="https://sjh354.github.io/blog/2024/images/"><![CDATA[<p>이딴 똥글을 왜 썼을까?</p> <p><a href="https://chirpy.cotes.page/posts/write-a-new-post/">참고자료</a></p> <h1 id="init-블로그-글-입니다">Init 블로그 글 입니다</h1> <p>대충 이렇게 하면됨</p> <p>test haha</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">printf</span><span class="p">(</span><span class="s">"Hello, World!</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</code></pre></div></div> <p>하하핫 성공</p>]]></content><author><name></name></author><category term="Development"/><category term="정보"/><summary type="html"><![CDATA[예전 블로그 자료 백업]]></summary></entry><entry><title type="html">BOJ 1806번: 부분합</title><link href="https://sjh354.github.io/blog/2015/1806/" rel="alternate" type="text/html" title="BOJ 1806번: 부분합"/><published>2015-05-14T15:00:00+00:00</published><updated>2015-05-14T15:00:00+00:00</updated><id>https://sjh354.github.io/blog/2015/1806</id><content type="html" xml:base="https://sjh354.github.io/blog/2015/1806/"><![CDATA[<h2 id="1-문제-상황">1. 문제 상황</h2> <p>문제</p> <blockquote> <p>10,000 이하의 자연수로 이루어진 길이 N짜리 수열이 주어진다. 이 수열에서 연속된 수들의 부분합 중에 그 합이 S 이상이 되는 것 중, 가장 짧은 것의 길이를 구하는 프로그램을 작성하시오.</p> </blockquote> <p>입력</p> <blockquote> <p>첫째 줄에 N (10 ≤ N &lt; 100,000)과 S (0 &lt; S ≤ 100,000,000)가 주어진다. 둘째 줄에는 수열이 주어진다. 수열의 각 원소는 공백으로 구분되어져 있으며, 10,000이하의 자연수이다.</p> </blockquote> <p>출력</p> <blockquote> <p>첫째 줄에 구하고자 하는 최소의 길이를 출력한다. 만일 그러한 합을 만드는 것이 불가능하다면 0을 출력하면 된다.</p> </blockquote> <p>예제</p> <div class="language-c highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 입력</span>
<span class="mi">10</span> <span class="mi">15</span>
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">10</span> <span class="mi">7</span> <span class="mi">4</span> <span class="mi">9</span> <span class="mi">2</span> <span class="mi">8</span>
<span class="c1">//출력</span>
<span class="mi">2</span>

<span class="c1">// 입력</span>
<span class="mi">10</span> <span class="mi">14</span>
<span class="mi">5</span> <span class="mi">1</span> <span class="mi">3</span> <span class="mi">5</span> <span class="mi">10</span> <span class="mi">7</span> <span class="mi">4</span> <span class="mi">9</span> <span class="mi">2</span> <span class="mi">8</span>
<span class="c1">//출력</span>
<span class="mi">2</span>

<span class="c1">// 입력</span>
<span class="mi">10</span> <span class="mi">30</span>
<span class="mi">15</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">15</span>
<span class="c1">//출력</span>
<span class="mi">10</span>

<span class="c1">// 입력</span>
<span class="mi">6</span> <span class="mi">10</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">13</span>
<span class="c1">//출력</span>
<span class="mi">1</span>

<span class="c1">// 입력</span>
<span class="mi">10</span> <span class="mi">10</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">10</span>
<span class="c1">//출력</span>
<span class="mi">1</span>

<span class="c1">// 입력</span>
<span class="mi">10</span> <span class="mi">30</span>
<span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">15</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">15</span>
<span class="c1">// 출력</span>
<span class="mi">4</span>
</code></pre></div></div> <h2 id="2-내-답안">2. 내 답안</h2> <details> <summary>코드 보기</summary> <div> <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">S</span><span class="p">,</span> <span class="n">tmp</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">left</span><span class="p">,</span> <span class="n">right</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">inps</span><span class="p">[</span><span class="mi">100001</span><span class="p">],</span> <span class="n">sums</span><span class="p">[</span><span class="mi">100001</span><span class="p">];</span>

    <span class="n">scanf</span><span class="p">(</span><span class="s">"%d %d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">N</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">S</span><span class="p">);</span>
    <span class="n">inps</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">sums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">scanf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,</span> <span class="o">&amp;</span><span class="n">tmp</span><span class="p">);</span>
        <span class="k">if</span><span class="p">(</span><span class="n">tmp</span> <span class="o">&gt;</span> <span class="n">S</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">printf</span><span class="p">(</span><span class="s">"1</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
            <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">inps</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">tmp</span><span class="p">;</span>
        <span class="n">sums</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">sums</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">tmp</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">sums</span><span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">S</span><span class="p">){</span>
        <span class="n">printf</span><span class="p">(</span><span class="s">"0</span><span class="se">\n</span><span class="s">"</span><span class="p">);</span>
        <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="c1">// two pointers</span>
    <span class="n">left</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">right</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">N</span><span class="o">+</span><span class="mi">100</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span><span class="n">left</span><span class="o">&lt;=</span><span class="n">N</span> <span class="o">&amp;&amp;</span> <span class="n">right</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// printf("%d~%d: %d\n", left, right, sums[right]-sums[left]);</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">sums</span><span class="p">[</span><span class="n">right</span><span class="p">]</span> <span class="o">-</span> <span class="n">sums</span><span class="p">[</span><span class="n">left</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">S</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// 현재 부분합이 S보다 작으면 right++</span>
            <span class="n">right</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="c1">// 현재 부분합이 S보다 크면 고려대상</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">right</span><span class="o">-</span><span class="n">left</span><span class="o">&lt;</span><span class="n">ans</span><span class="p">)</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">right</span> <span class="o">-</span> <span class="n">left</span><span class="p">;</span> <span class="c1">// 현재 포인터들이 최소값 후보면 일단 최솟값을 바꾸고</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">right</span><span class="o">-</span><span class="n">left</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="c1">// right가 left 한 칸 옆에 있으면 둘 다 옮기고 아니면 left만 옮김</span>
                <span class="n">left</span> <span class="o">++</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
                <span class="n">left</span><span class="o">++</span><span class="p">;</span>
                <span class="n">right</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
            
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">printf</span><span class="p">(</span><span class="s">"%d</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="n">ans</span><span class="p">);</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div> </div> </div> </details> <h2 id="3-첨언">3. 첨언</h2> <p>그냥 별 다를 것 없는 두 포인터 유형의 문제였다. <br/> 질문게시판을 돌아다니며 보이는 모든 반례를 넣어봤는데 왜 안되는지 모르겠어서 문제 생길만 한 부분을 모조리 조금씩 건들다 보니 틀린 횟수가 너무 많아졌따..<br/> 알고보니 30번 줄에 초기 최댓값을 N으로 뒀었다….<br/> 앞으로 반례 좀 넣어보고 포기하지 말고 생각 좀 해야하겠다<br/> 반성하자..<br/></p>]]></content><author><name></name></author><category term="Development"/><category term="PS"/><category term="수학"/><category term="partial-sum"/><category term="two-pointers"/><summary type="html"><![CDATA[1. 문제 상황]]></summary></entry></feed>